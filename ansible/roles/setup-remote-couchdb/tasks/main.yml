---
- name: add internet proxy
  become: yes
  blockinfile:
    path: /etc/environment
    block: |
      http_proxy="http://wwwproxy.unimelb.edu.au:8000"
      https_proxy="http://wwwproxy.unimelb.edu.au:8000"
      ftp_proxy="http://wwwproxy.unimelb.edu.au:8000"
      no_proxy=localhost,127.0.0.1,ubuntu
    state: present

# Purge couchdb if needed.
# - name: Purge
#   become: yes
#   shell: apt-get purge -y couchdb

# Checks if couchdb is installed. Use with `"'couchdb' not in ansible_facts.packages"`.
- name: 'Check if couchdb is installed'
  package_facts:
    manager: 'auto'

# - name: debug
#   debug:
#     msg: "{{'couchdb' not in ansible_facts.packages}}"

- name: add couchdb repo key
  become: yes
  apt_key:
    url: https://couchdb.apache.org/repo/bintray-pubkey.asc
    validate_certs: no
    state: present
  when: "'couchdb' not in ansible_facts.packages"

- name: add repo couchdb
  become: yes
  apt_repository:
    repo: deb https://apache.bintray.com/couchdb-deb bionic main
    state: present
    validate_certs: no
    filename: couchdb
  when: "'couchdb' not in ansible_facts.packages"

- name: install couchdb
  become: yes
  script: working_scripts/00-install-couchdb.sh {{ inventory_hostname }}
  when: "'couchdb' not in ansible_facts.packages"

- name: Make CouchDB use the open ports
  become: yes
  blockinfile:
    path: /opt/couchdb/etc/vm.args
    insertafter: "-ssl session_lifetime 300$(?![\r\n])"
    block: |
      -kernel inet_dist_listen_min 9100
      -kernel inet_dist_listen_max 9200
    state: present
  when: "'couchdb' not in ansible_facts.packages"

- name: Set uuid
  uri:
    url: http://{{ inventory_hostname }}:5984/_node/_local/_config/couchdb/uuid
    user: admin
    password: password
    method: PUT
    body: '"60c9e8234dfba3e2fdab04bf92001142"'
    force_basic_auth: yes
    status_code: 200,201
  when: "'couchdb' not in ansible_facts.packages"

- name: Set secret
  uri:
    url: http://{{ inventory_hostname }}:5984/_node/_local/_config/couch_httpd_auth/secret
    user: admin
    password: password
    method: PUT
    body: '"60c9e8234dfba3e2fdab04bf92001cc2"'
    force_basic_auth: yes
    status_code: 200,201
  when: "'couchdb' not in ansible_facts.packages"

##
# Start clustering
##
- name: Enable local cluster
  uri:
    url: http://127.0.0.1:5984/_cluster_setup
    user: admin
    password: password
    method: POST
    body: '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"password", "node_count":"4"}'
    body_format: json
    force_basic_auth: yes
    status_code: 201,400
    headers:
      Content-Type: 'application/json'
  when: "'couchdb' not in ansible_facts.packages"

# Save the initial state of cluster, only in coordinator node.
- name: save initial state of membership
  script: working_scripts/01-check-membership.sh {{ inventory_hostname }}
  when: inventory_hostname == groups['remote'][0]
  register: initial_membership

- name: Coordinator node identifies all clusters in the network
  uri:
    url: http://{{ groups['remote'][0] }}:5984/_cluster_setup
    user: admin
    password: password
    method: POST
    body: '{"action": "enable_cluster", "bind_address":"0.0.0.0", "username": "admin", "password":"password", "port": 5984, "node_count": "4", "remote_node": "{{ item }}", "remote_current_user": "admin", "remote_current_password": "password" }'
    force_basic_auth: yes
    status_code: 201,409
    body_format: json
    headers:
      Content-Type: 'application/json'
  with_items: "{{groups['remote']}}"
  when: inventory_hostname == groups['remote'][0] and inventory_hostname != item

- name: Coordinator node adds cluster nodes
  uri:
    url: http://{{ groups['remote'][0] }}:5984/_cluster_setup
    method: POST
    user: admin
    password: password
    body: '{"action": "add_node", "host":"{{ item }}", "port": "5984", "username": "admin", "password":"password"}'
    force_basic_auth: yes
    status_code: 201,409
    body_format: json
    headers:
      Content-Type: 'application/json'
  with_items: "{{groups['remote']}}"
  when: inventory_hostname == groups['remote'][0] and inventory_hostname != item

# Save the final state of cluster, only in coordinator node.
- name: save final state of membership
  script: working_scripts/01-check-membership.sh {{ inventory_hostname }}
  when: inventory_hostname == groups['remote'][0]
  register: final_membership

# - name: debug
#   debug:
#     msg: '{{ final_membership }} and {{ initial_membership }}'

- name: finish the cluster
  uri:
    url: http://{{ groups['remote'][0] }}:5984/_cluster_setup
    method: POST
    user: admin
    password: password
    body: '{"action": "finish_cluster"}'
    force_basic_auth: yes
    status_code: 201,200
    body_format: json
    headers:
      Content-Type: 'application/json'
  when:
    - inventory_hostname == groups['remote'][0]
    - final_membership.stdout != initial_membership.stdout
    - "'couchdb' not in ansible_facts.packages"
